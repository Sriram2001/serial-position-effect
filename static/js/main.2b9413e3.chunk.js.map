{"version":3,"sources":["assets/memory.png","common.js","steps/Intro.js","steps/Recall.js","steps/Remember.js","steps/Finish.js","Game.js","App.js","index.js"],"names":["module","exports","shuffleArray","array","i","length","j","Math","floor","random","temp","getAnimals","animalsList","selected","slice","randomList","Intro","next","clearList","useEffect","className","src","Memory","alt","style","width","onClick","xmlns","viewBox","fill","fillRule","d","clipRule","Recall","addAnimal","selectedAnimals","map","animal","idx","key","includes","cursor","RememberStage","React","useState","time","setTime","timer","setTimeout","clearTimeout","getClass","Finish","allAnimals","message","outside","inside","forEach","every","some","stroke","strokeLinecap","strokeLinejoin","strokeWidth","animals","randomAnimals","skip","step","push","id","window","scrollTo","Game","setSelected","list","filter","e","onNext","render","App","minHeight","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.2b9413e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/memory.b17ce998.png\";","import animalsList from \"./animals.json\";\r\n\r\nfunction shuffleArray(array) {\r\n  for (var i = array.length - 1; i > 0; i--) {\r\n    var j = Math.floor(Math.random() * (i + 1));\r\n    var temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n}\r\n\r\nexport function getAnimals() {\r\n  shuffleArray(animalsList);\r\n  const selected = animalsList.slice(0, 8);\r\n  let randomList = animalsList.slice(0, 16);\r\n  shuffleArray(randomList);\r\n  return [selected, randomList];\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport Memory from '../assets/memory.png';\r\n\r\nexport default function Intro({ next, clearList }) {\r\n  useEffect(() => {\r\n    clearList();\r\n  }, []); // eslint-disable-line\r\n  return (\r\n    <div className=\"d-flex flex-column align-items-center\">\r\n      <h1 className=\"text-center display-4\">\r\n        Serial Position Effect Simulator\r\n      </h1>\r\n      <img src={Memory} alt=\"Logo\" style={{width: \"200px\"}}/>\r\n      <h2 className=\"mt-3\">Rules:</h2>\r\n      <ul className=\"mb-3\">\r\n        <li>On the next screen, a list of animals will be shown</li>\r\n        <li>You will be given 8 seconds to remember this list of animals</li>\r\n        <li>A timer will show the time elapsed</li>\r\n        <li>After the time ends, you will be asked to recall the animals</li>\r\n        <li>Click start when you are ready to begin!</li>\r\n      </ul>\r\n      <button\r\n        className=\"btn btn-success btn-lg d-flex align-items-center my-3\"\r\n        onClick={next}\r\n      >\r\n        Start{\" \"}\r\n        <span className=\"ml-2\" style={{ width: \"15px\" }}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            className=\"d-block\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\"\r\n              clipRule=\"evenodd\"\r\n            />\r\n          </svg>\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Recall({\r\n  addAnimal,\r\n  next,\r\n  animalsList,\r\n  selectedAnimals\r\n}) {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"text-center my-3\">Select the animals: </h1>\r\n      <p className=\"text-center\">\r\n        There is a list of animals below. Select all of the ones that you\r\n        remember from the list shown before.\r\n      </p>\r\n      <div className=\"row ml-0\">\r\n        <ul className=\"list-group col-md-6\">\r\n          {animalsList.slice(0, animalsList.length / 2).map((animal, idx) => {\r\n            return (\r\n              <li\r\n                key={idx}\r\n                className={`list-group-item ${\r\n                  selectedAnimals.includes(animal) && \"list-group-item-primary\"\r\n                }`}\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => addAnimal(animal)}\r\n              >\r\n                {animal}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n        <ul className=\"list-group col-md-6\">\r\n          {animalsList.slice(animalsList.length / 2).map((animal, idx) => {\r\n            return (\r\n              <li\r\n                key={idx}\r\n                className={`list-group-item ${\r\n                  selectedAnimals.includes(animal) && \"list-group-item-primary\"\r\n                }`}\r\n                style={{ cursor: \"pointer\" }}\r\n                onClick={() => addAnimal(animal)}\r\n              >\r\n                {animal}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <button\r\n        className=\"btn btn-primary d-flex align-items-center my-3\"\r\n        onClick={next}\r\n      >\r\n        Finish{\" \"}\r\n        <span className=\"ml-2\" style={{ width: \"15px\" }}>\r\n          <svg\r\n            className=\"d-block\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n          >\r\n            <path d=\"M4.555 5.168A1 1 0 003 6v8a1 1 0 001.555.832L10 11.202V14a1 1 0 001.555.832l6-4a1 1 0 000-1.664l-6-4A1 1 0 0010 6v2.798l-5.445-3.63z\" />\r\n          </svg>\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function RememberStage({ animalsList, next }) {\r\n  const [time, setTime] = React.useState(8);\r\n  React.useEffect(() => {\r\n    let timer = null;\r\n    if (time > 0) {\r\n      timer = setTimeout(() => setTime((time) => time - 1), 1000);\r\n    } else {\r\n      next();\r\n    }\r\n    return () => {\r\n      if (timer) {\r\n        clearTimeout(timer);\r\n      }\r\n    };\r\n  }, [time, next]);\r\n  const getClass = (time) => {\r\n    if (time < 3) return \"text-danger\";\r\n    if (time < 6) return \"text-warning\";\r\n    return \"text-success\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"my-3 text-center\">Remember the following animals:</h1>\r\n      <div className=\"row ml-0\">\r\n        <div className=\"col-md-6 text-center h-100 my-auto\">\r\n          <h4>\r\n            Time left: <span className={`h2 ${getClass(time)}`}>{time}</span>s\r\n          </h4>\r\n        </div>\r\n        <ul className=\"col-md-4 list-group\">\r\n          {animalsList.map((animal, idx) => (\r\n            <li key={idx} className=\"list-group-item\">\r\n              {animal}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Finish({ selectedAnimals, allAnimals, next }) {\r\n  let message = \"\";\r\n  let outside = 0;\r\n  let inside = 0;\r\n  allAnimals.forEach((animal, idx) => {\r\n    if (selectedAnimals.includes(animal)) {\r\n      if (idx >= 3 && idx < 6) inside += 1;\r\n      else outside += 1;\r\n    }\r\n  });\r\n\r\n  if (inside < outside) {\r\n    message = (\r\n      <p>\r\n        You have recalled more elements in the boundary of the array than in the\r\n        interior. So, the serial position has been effective.\r\n      </p>\r\n    );\r\n  } else if (outside !== inside) {\r\n    message = (\r\n      <p>\r\n        You have recalled more elements in the interior of the array than in the\r\n        boundary. So, the serial position has not been effective.\r\n      </p>\r\n    );\r\n  }\r\n  if (allAnimals.every((animal) => selectedAnimals.includes(animal))) {\r\n    message = (\r\n      <p>\r\n        You have recalled all the animals and your memory is very good. So, the\r\n        serial position efect does not apply.\r\n      </p>\r\n    );\r\n  }\r\n  if (selectedAnimals.length > allAnimals.length) {\r\n    message = (\r\n      <p>\r\n        You have selected more than 8 elements. So, the serial position efect\r\n        does not apply. Please retry the simulation\r\n      </p>\r\n    );\r\n  }\r\n  if (\r\n    selectedAnimals.length === 0 ||\r\n    !allAnimals.some((animal) => selectedAnimals.includes(animal))\r\n  ) {\r\n    message = (\r\n      <p>You have not recalled any animal correctly. Do you want to retry?</p>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"my-3 text-center\">Result:</h1>\r\n      <div className=\"text-center\">{message}</div>\r\n      <div className=\"row no-gutters\">\r\n        <ul className=\"list-group col-md-8 mx-auto\">\r\n          {allAnimals.map((animal, idx) => {\r\n            return (\r\n              <li\r\n                key={idx}\r\n                className={`list-group-item ${\r\n                  selectedAnimals.includes(animal) && \"list-group-item-success\"\r\n                }`}\r\n              >\r\n                {animal}\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n      <button\r\n        className=\"btn btn-success mx-auto d-flex align-items-center my-3\"\r\n        onClick={next}\r\n      >\r\n        Restart\r\n        <span className=\"ml-2\" style={{ width: \"20px\" }}>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            className=\"d-block\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n            />\r\n          </svg>\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { Wizard, Steps, Step } from \"react-albus\";\nimport { getAnimals } from \"./common\";\nimport Intro from \"./steps/Intro\";\nimport Recall from \"./steps/Recall\";\nimport RememberStage from \"./steps/Remember\";\nimport Finish from \"./steps/Finish\";\n\nlet [animals, randomAnimals] = getAnimals();\nconst skip = ({ step, push }) => {\n  switch (step.id) {\n    case \"finish\": {\n      [animals, randomAnimals] = getAnimals();\n      window.scrollTo(0, 0);\n      push(\"start\");\n      break;\n    }\n    default: {\n      window.scrollTo(0, 0);\n      push();\n    }\n  }\n};\n\nconst Game = () => {\n  const [selectedAnimals, setSelected] = React.useState([]);\n\n  const addAnimal = (animal) => {\n    setSelected((list) => {\n      if (list.includes(animal)) {\n        return list.filter((e) => e !== animal);\n      } else return [...list, animal];\n    });\n  };\n  return (\n    <Wizard onNext={skip}>\n      <Steps>\n        <Step\n          id=\"start\"\n          render={({ next }) => (\n            <Intro next={next} clearList={() => setSelected([])} />\n          )}\n        />\n        <Step\n          id=\"remember\"\n          render={({ next }) => (\n            <RememberStage next={next} animalsList={animals} />\n          )}\n        />\n        <Step\n          id=\"recall\"\n          render={({ next }) => (\n            <Recall\n              next={next}\n              selectedAnimals={selectedAnimals}\n              addAnimal={addAnimal}\n              animalsList={randomAnimals}\n            />\n          )}\n        />\n        <Step\n          id=\"finish\"\n          render={({ next }) => (\n            <Finish\n              next={next}\n              allAnimals={animals}\n              selectedAnimals={selectedAnimals}\n            />\n          )}\n        />\n      </Steps>\n    </Wizard>\n  );\n};\n\nexport default Game;\n","import React from \"react\";\r\nimport Game from \"./Game\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <div\r\n      className=\"d-flex flex-column w-100 justify-content-center align-items-center\"\r\n      style={{ minHeight: \"100vh\" }}\r\n    >\r\n      <Game />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}